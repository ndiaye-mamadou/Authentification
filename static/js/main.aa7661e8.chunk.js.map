{"version":3,"sources":["utils/firebaseConfig.js","components/UidContext.js","components/Create.js","components/UpdateDelete.js","components/Read.js","components/Main.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","UidContext","createContext","Create","uid","useContext","useState","author","setAuthor","text","setText","console","log","className","type","placeholder","value","onChange","e","target","onClick","quotesDB","database","ref","quote","push","UpdateDelete","item","update","setUpdate","authorUpdate","setAuthorUpdate","textUpdate","setTextUpdate","authorCheck","auth","currentUser","displayName","child","id","remove","defaultValue","Read","quoteList","setQuoteList","useEffect","on","snapshot","val","previousList","list","map","index","Main","signOut","App","isSignedIn","setIsSignedIn","setUid","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","EmailAuthProvider","callbacks","signInSuccess","onAuthStateChanged","user","Provider","firebaseAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7661e8.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD36HVU7jbdAG34OCEGZGyN1ExnQ0T8QVM\",\r\n    authDomain: \"my-react-authen.firebaseapp.com\",\r\n\r\n  projectId: \"my-react-authen\",\r\n   storageBucket: \"my-react-authen.appspot.com\",\r\n   messagingSenderId: \"1869163297\",\r\n  appId: \"1:1869163297:web:9d4bbae2673d108eb96c60\"\r\n  };\r\n      // Initialize Firebase\r\n      firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;","import { createContext } from 'react';\n\nexport const UidContext = createContext(null);","import React, { useState, useContext } from \"react\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { UidContext } from \"./UidContext\";\n\nconst Create = () => {\n  const uid = useContext(UidContext);\n  const [author, setAuthor] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  \n  console.log(uid);\n  const createQuote = () => {\n    const quotesDB = firebase.database().ref(\"quotesDB\");\n    const quote = {\n      uid,\n      author,\n      text,\n    };\n\n    quotesDB.push(quote);\n    \n    setAuthor(\"\");\n    setText(\"\");\n   \n  };\n\n  return (\n    <div className=\"create\">\n      <h4>Déposer une citation</h4>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"Auteur\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n        <textarea\n          type=\"text\"\n          placeholder=\"Citation\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button onClick={createQuote}>Create</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n","import React, { useState, useContext } from \"react\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { UidContext } from \"./UidContext\";\n\nconst UpdateDelete = ({ item }) => {\n  const [update, setUpdate] = useState(false);\n  const [authorUpdate, setAuthorUpdate] = useState(null);\n  const [textUpdate, setTextUpdate] = useState(null);\n\n  const uid = useContext(UidContext);\n\n  const authorCheck = () => {\n    if (item.uid === uid) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  authorCheck();\n\n  const updateItem = () => {\n    // pointer id de l'élement à update\n    let quote = firebase.database().ref(\"quotesDB\").child(item.id);\n\n    // make sure there's no undifined\n    if (authorUpdate !== null) {\n      quote.update({\n        author: authorUpdate,\n      });\n    }\n    if (textUpdate !== null) {\n      quote.update({\n        text: textUpdate,\n      });\n    }\n    // repasse update sur false\n    setUpdate(false);\n  };\n\n  const deleteItem = () => {\n    // pointer id de l'élement à delete\n    let quote = firebase.database().ref(\"quotesDB\").child(item.id);\n\n    quote.remove();\n    authorCheck();\n  };\n\n  return (\n    <li>\n      {update === false && (\n        <div className=\"item-container\">\n          <p>\"{item.text}\"</p>\n          <h6>{authorCheck() ? (firebase.auth().currentUser.displayName) : (item.author)}\n          </h6>\n\n          {authorCheck() && (\n            <div className=\"buttons-container\">\n              <button onClick={() => setUpdate(!update)}>Update</button>\n              <button onClick={deleteItem}>Delete</button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {update && (\n        <div className=\"item-container-update\">\n          <textarea\n            defaultValue={item.text}\n            onChange={(e) => setTextUpdate(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            defaultValue={item.author}\n            onChange={(e) => setAuthorUpdate(e.target.value)}\n          />\n          <button onClick={updateItem}>Validate update</button>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default UpdateDelete;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"../utils/firebaseConfig\";\nimport UpdateDelete from \"./UpdateDelete\";\n\nconst Read = () => {\n  const [quoteList, setQuoteList] = useState([]);\n\n  useEffect(() => {\n    const quotesDB = firebase.database().ref(\"quotesDB\");\n\n    quotesDB.on(\"value\", (snapshot) => {\n      console.log(snapshot.val());\n      let previousList = snapshot.val();\n      let list = [];\n      for (let id in previousList) {\n        list.push({ id, ...previousList[id] });\n      }\n      setQuoteList(list);\n    });\n  }, []);\n\n  return (\n    <div className=\"read\">\n      <ul>\n        {quoteList &&\n          quoteList.map((item, index) => (\n            <UpdateDelete item={item} key={index} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Read;\n","import React from \"react\";\nimport firebase from \"../utils/firebaseConfig\";\nimport Create from \"./Create\";\nimport Read from \"./Read\";\n\nconst Main = () => {\n  return (\n    <main>\n      <nav>\n        <h1>React Crud</h1>\n        <h4>Bonjour {firebase.auth().currentUser.displayName}</h4>\n        <div onClick={() => firebase.auth().signOut()}>Se déconnecter</div>\n      </nav>\n\n      <Create />\n      <Read />\n    </main>\n  );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"./utils/firebaseConfig\";\nimport Main from \"./components/Main\";\nimport { UidContext } from \"./components/UidContext\";\n\nconst App = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [uid, setUid] = useState(null);\n\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setIsSignedIn(!!user);\n      //console.log(user);\n      setUid(user.uid);\n     // console.log(user.uid);\n    });\n  }, []);\n\n  return (\n    <UidContext.Provider value={uid}>\n      <div className=\"App\">\n        {isSignedIn ? (\n          <Main />\n        ) : (\n          <div className=\"login-page\">\n            <h1>React Crud</h1>\n            <StyledFirebaseAuth\n              uiConfig={uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </div>\n        )}\n      </div>\n    </UidContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}